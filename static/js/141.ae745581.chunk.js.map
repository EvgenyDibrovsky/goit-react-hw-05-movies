{"version":3,"file":"static/js/141.ae745581.chunk.js","mappings":"oNAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iI,SCAVE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,yBACE,SAACT,EAAD,CAAYU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAAhD,SACGI,KAFID,EAMZ,KAGN,C,iKCDYK,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,kKAULc,EAASd,EAAAA,GAAAA,OAAH,kKAcLe,GAHWf,EAAAA,GAAAA,EAAH,wCAGDA,EAAAA,EAAAA,IAAOgB,EAAAA,IAAPhB,CAAH,uEAMLiB,EAAajB,EAAAA,GAAAA,KAAH,8K,SCrCVkB,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAK1B,OACE,SAAC,KAAD,CAAQC,cAAe,CAAEC,MAAO,IAAMF,SALnB,SAACG,EAAQC,GAC5BJ,EAASG,GACTC,EAAQC,eACT,EAEC,UACE,UAACP,EAAD,YACE,SAACH,EAAD,CAAQW,KAAK,SAAb,UACE,SAACV,EAAD,OAGF,SAACH,EAAD,CACEa,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,YAAY,qBAKrB,E,UCFD,EAvBe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe8B,EAAf,KAaA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMb,EAAQS,EAAaK,IAAI,SAC3Bd,IACFe,EAAAA,EAAAA,IAAaf,GAAOgB,KAAKJ,EAE5B,GAAE,CAACH,KAGF,iCACE,SAACZ,EAAD,CAAWC,SAbM,SAAAmB,GACnBP,EAAgB,CAAEV,MAAOiB,GAC1B,IAYInC,EAAOoC,OAAS,IAAK,SAACrC,EAAA,EAAD,CAAWC,OAAQA,MAG9C,C,sNCrBKqC,G,QAAcC,IAAAA,OAAa,CAC/BC,QCPsB,gCDQtBC,OAAQ,CACNC,QCRgB,uCDYPC,EAAc,mCAAG,6GAEHL,EAAYL,IAAZ,sBAFG,cAEpBW,EAFoB,yBAGnBA,EAASC,KAAKC,SAHK,gCAK1BC,EAAAA,GAAAA,MAAY,SALc,yDAAH,qDASdb,EAAY,mCAAG,WAAMf,GAAN,gGAEDmB,EAAYL,IAAZ,eAAgC,CACrDQ,OAAQ,CAAEtB,MAAOA,KAHK,cAElByB,EAFkB,yBAKjBA,EAASC,KAAKC,SALG,gCAOxBC,EAAAA,GAAAA,MAAY,SAPY,yDAAH,sDAWZC,EAAa,mCAAG,WAAM3C,GAAN,gGAEFiC,EAAYL,IAAZ,gBAAyB5B,IAFvB,cAEnBuC,EAFmB,yBAGlBA,EAASC,MAHS,gCAKzBE,EAAAA,GAAAA,MAAY,SALa,yDAAH,sDASbE,EAAY,mCAAG,WAAM5C,GAAN,gGAEDiC,EAAYL,IAAZ,gBAAyB5B,EAAzB,aAFC,cAElBuC,EAFkB,yBAGjBA,EAASC,KAAKK,MAHG,gCAKxBH,EAAAA,GAAAA,MAAY,SALY,yDAAH,sDASZI,EAAe,mCAAG,WAAM9C,GAAN,gGAEJiC,EAAYL,IAAZ,gBAAyB5B,EAAzB,aAFI,cAErBuC,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,gCAK3BC,EAAAA,GAAAA,MAAY,SALe,yDAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/api.js","constants/constants.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  color: #000;\n  font-size: 1.2rem;\n  text-decoration: none;\n  &:hover {\n    color: orangered;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { StyledLink } from 'components/MovieList/MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </StyledLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// import styled from \"styled-components\";\n \n\n\n\n// export const Input = styled.input`\n//   padding: 8px 32px 8px 8px;\n//   border-radius: 4px;\n//   font: inherit;\n// `;\n\n\n\nimport styled from 'styled-components';\nimport { Field } from 'formik';\nimport { HiSearch } from \"react-icons/hi\";\n\nexport const Input = styled(Field)`\n  border: 1px solid black;\n  font: inherit;\n  font-size: 16px;\n  padding: 8px;\n  border-radius: 4px;\n  width: 360px;\n  outline: 0;\n`;\n\nexport const Button = styled.button`\n   display: flex;\n  cursor: pointer;\n  padding: 4px;\n \n  background: rgb(226, 226, 226);\n  border: none;\n  border-radius: 4px;\n  \n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n export const Icon = styled(HiSearch)`\n   width: 28px;\n   height: 28px;\n   \n   \n `;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;","import React from 'react';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Input,\n  Icon,\n  SearchForm,\n} from 'components/SearchBox/SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const handleSubmit = (values, actions) => {\n    onSubmit(values);\n    actions.setSubmitting();\n  };\n  return (\n    <Formik initialValues={{ query: '' }} onSubmit={handleSubmit}>\n      <SearchForm>\n        <Button type=\"submit\">\n          <Icon />\n        </Button>\n\n        <Input\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n        />\n      </SearchForm>\n    </Formik>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { searchMovies } from '../../services/api';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query) {\n      searchMovies(query).then(setMovies);\n    }\n  }, [searchParams]);\n\n  return (\n    <>\n      <SearchBox onSubmit={handleSubmit} />\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { BASE_URL } from 'constants/constants';\nimport { API_KEY } from 'constants/constants';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst customAxios = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const trendingMovies = async () => {\n  try {\n    const response = await customAxios.get(`trending/movie/day`);\n    return response.data.results;\n  } catch {\n    toast.error('error');\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await customAxios.get(`search/movie`, {\n      params: { query: query },\n    });\n    return response.data.results;\n  } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMoviesById = async id => {\n  try {\n    const response = await customAxios.get(`movie/${id}`);\n    return response.data;\n  } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMovieCast = async id => {\n  try {\n    const response = await customAxios.get(`movie/${id}/credits`);\n    return response.data.cast;\n  } catch {\n    toast.error('error');\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await customAxios.get(`movie/${id}/reviews`);\n    return response.data.results;\n  } catch {\n    toast.error('error');\n  }\n};\n","export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = `bfe2a3794a959701aae6892cb5514fc3`;\n"],"names":["StyledLink","styled","NavLink","MovieList","movies","location","useLocation","map","id","title","to","state","from","Input","Field","Button","Icon","HiSearch","SearchForm","SearchBox","onSubmit","initialValues","query","values","actions","setSubmitting","type","name","autoComplete","placeholder","useSearchParams","searchParams","setSearchParams","useState","setMovies","useEffect","get","searchMovies","then","value","length","customAxios","axios","baseURL","params","api_key","trendingMovies","response","data","results","toast","getMoviesById","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}